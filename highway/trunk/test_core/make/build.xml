<?xml version="1.0" encoding="UTF-8"?>

<project name="socle-j2ee-service-test" default="servicetest.build" basedir="..">

	<!-- resources -->
	<property name="core.filename" value="socle-j2ee-core.jar" />

	<!-- generated files -->
	<property name="jar.filename" value="${ant.project.name}.jar" />
	<property name="war.filename" value="${ant.project.name}.war" />
	<property name="ejb.filename" value="${ant.project.name}_ejb.jar" />
	<property name="ear.filename" value="${ant.project.name}.ear" />

	<!-- project hierarchy -->
	<property name="src.dir" value="src" />
	<property name="web.dir" value="web" />
	<property name="lib.dir" value="lib" />
	<property name="bin.dir" value="bin" />
	<property name="gensrc.dir" value="bin/gensrc" />
	<property name="classes.dir" value="bin/ant-classes" />
	<property name="pack.dir" value="bin/pack" />
	<property name="libcore.dir" value="../socle_j2ee_core/lib" />
	<property name="bincore.dir" value="../socle_j2ee_core/bin/pack" />
	<property name="libwas.dir" value="lib/was" />

	
	<taskdef resource="com/manpower/socle/anttasks.properties">
		<classpath path="../socle_j2ee_tools/bin/pack/socle-j2ee-tools.jar" />
	</taskdef>

	<taskdef resource="hivemind-tasks.properties">
		<classpath path="../socle_j2ee/lib/hivemind-1.1.1.jar" />
	</taskdef>
	
	<target name="servicetest.build"
		depends="servicetest.setenv, servicetest.generate, servicetest.compile,
			servicetest.pack, servicetest.deploy, servicetest.start, servicetest.install"
	/>
	
	<target name="servicetest.setenv" description="Init the environment">
		<property file="make/context/user_${user.name}.properties" />
		<property file="make/context/${context}.properties" />
		<property file="make/context/default.properties" />
		<echoproperties />
	</target>
	
	<target name="servicetest.generate">
		<delete dir="bin/gensrc"/>
		<mkdir dir="bin/gensrc" />
		<vogen 
			inputDir="${src.dir}" 
			outputDir="${gensrc.dir}" 
			hibernateCfgFile="com/manpower/servicetest/access/hibernate.cfg.xml"
		/>
		<metagen 
			inputDir="${src.dir}" 
			outputDir="${gensrc.dir}" 
		/>
		<ejbgen 
			javaInputDir="${src.dir}" 
			javaOutputDir="${gensrc.dir}" 
			cfgOutputDir="${pack.dir}/ejb/META-INF" 
		/>
	</target>

	<target name="servicetest.compile">
		<delete dir="${classes.dir}"/>
		<mkdir dir="${classes.dir}" />
		<javac target="1.3" destdir="${classes.dir}" debug="true">
			<src path="${src.dir}" />
			<src path="${gensrc.dir}" />
			<classpath>
				<fileset dir="../socle_j2ee/lib" includes="junit-*.jar" />
				<fileset dir="${libcore.dir}" includes="*.jar" /> 
				<fileset dir="${bincore.dir}" includes="*.jar" />
				<fileset dir="../socle_j2ee_ctg/bin/pack" includes="*.jar" />
				<fileset dir="../socle_j2ee_ctg/lib" includes="*.jar" />
				<fileset dir="../socle_j2ee_wbi/bin/pack" includes="*.jar" />
				<fileset dir="../socle_j2ee_wbi/lib" includes="*.jar" />
			</classpath>
		</javac>
		<copy todir="${classes.dir}">
			<fileset dir="${src.dir}">
				<include name="**/*" />
				<exclude name="**/*.java" />
			</fileset>
			<fileset dir="${gensrc.dir}">
				<include name="**/*" />
				<exclude name="**/*.java" />
			</fileset>
		</copy>
	</target>

	<target name="servicetest.pack">

		<jar
			basedir="${classes.dir}"
			destfile="${pack.dir}/${jar.filename}"
		/>
		
		<jar 
			basedir="${pack.dir}/ejb"
			destfile="${pack.dir}/${ejb.filename}" 
		>
			<manifest>
				<attribute name="Class-Path" value="socle-j2ee-core.jar socle-j2ee-service-test.jar"/>
			</manifest>
		</jar>
		
		<manifestclasspath property="servicetest.pack.war.classpath">
			<classpath>
				<fileset dir="${pack.dir}" includes="*.jar" />
				<fileset dir="${bincore.dir}" includes="*.jar" />
				<fileset dir="${libcore.dir}" includes="*.jar" excludes="j2ee-*.*" />
				<fileset dir="../socle_j2ee_ctg/bin/pack" includes="*.jar" />
				<fileset dir="../socle_j2ee_ctg/lib" includes="*.jar" excludes="j2ee-*.*" />
				<fileset dir="../socle_j2ee_wbi/bin/pack" includes="*.jar" />
				<fileset dir="../socle_j2ee_wbi/lib" includes="*.jar" />
			</classpath>
		</manifestclasspath>
		
		<war 
			basedir="${web.dir}" 
			destfile="${pack.dir}/${war.filename}" 
			webxml="cfg/war/web.xml"
		>
			<manifest>
				<attribute name="Class-Path" value="${servicetest.pack.war.classpath}"/>
			</manifest>
		</war>

		<ear 
			destfile="${pack.dir}/${ear.filename}"
			appxml="cfg/ear/application.xml"
		>
			<fileset dir="${pack.dir}" includes="*.jar, *.war" />
			<fileset dir="${bincore.dir}" includes="*.jar" />
			<fileset dir="${libcore.dir}" includes="*.jar" excludes="j2ee-*.*" />
			<fileset dir="../socle_j2ee_ctg/bin/pack" includes="*.jar" />
			<fileset dir="../socle_j2ee_ctg/lib" includes="*.jar" excludes="j2ee-*.*" />
			<fileset dir="../socle_j2ee_wbi/bin/pack" includes="*.jar" />
			<fileset dir="../socle_j2ee_wbi/lib" includes="*.jar" />
		</ear>
		
	</target>

	<target name="servicetest.deploy">
		<exec executable="${ejbdeploy}">
			<arg value="${pack.dir}/${ear.filename}" />
			<arg value="bin/deploy" />
			<arg value="${bin.dir}/${ear.filename}" />
		</exec>
	</target>

	<target name="servicetest.start">
		<exec executable="${startserver}">
			<arg value="server1" />
		</exec>
	</target>

	<target name="servicetest.stop">
		<exec executable="${stopserver}">
			<arg value="server1" />
		</exec>
	</target>

	<target name="servicetest.install">
		<exec executable="${wsadmin}">
			<arg value="-f" />
			<arg value="make/install.jacl" />
			<arg value="server1" />
			<arg value="${bin.dir}/${ear.filename}" />
			<arg value="${ear.filename}" />
		</exec>
	</target>
	<target name="servicetest.installDatasource">
		<exec executable="${wsadmin}">
			<arg value="-f" />
			<arg value="make/installDataSource.jacl" />
			<arg value="${cellName}" />
			<arg value="${nodeName}" />
			<arg value="${providerName}" />
			<arg value="${driverClassPath}" />
			<arg value="${datasourceName}" />
			<arg value="${databaseUserAlias}" />
			<arg value="${databaseUserName}" />
			<arg value="${databaseUserPassword}" />
		</exec>
	</target>
	<target name="servicetest.installJCAConnector">
		<exec executable="${wsadmin}">
			<arg value="-f" />
			<arg value="make/installConnecteurJCA.jacl" />
			<arg value="${cellName}" />
			<arg value="${nodeName}" />
			<arg value="${rarPath}" />
			<arg value="${serverCTGName}" />
			<arg value="${urlCTG}" />
			<arg value="${portCTG}" />
		</exec>
	</target>
	
	
	<target name="servicetest.uninstall">
		<exec executable="${wsadmin}">
			<arg value="-f" />
			<arg value="make/uninstall.jacl" />
			<arg value="server1" />
			<arg value="${bin.dir}/${ear.filename}" />
			<arg value="${ear.filename}" />
		</exec>
	</target>

	<target name="servicetest.unjar">
		<unjar src="${bin.dir}/${ear.filename}"  dest="${bin.dir}/ear" />
	</target>
	
	<target name="servicetest.test"
		depends="servicetest.setenv, servicetest.unjar, servicetest.run, servicetest.uninstall, servicetest.stop"
	/>
	
	<target name="servicetest.run" >
		<delete dir="bin/test"/>
		<mkdir dir="bin/test"/>
		
		<junit printsummary="yes" haltonfailure="yes" showoutput="yes" fork="yes">
			
			<jvmarg value="-Dcom.ibm.CORBA.Debug.Output=CorbaDebug.log"/>
			<jvmarg value="-Djava.naming.provider.url=${java.naming.provider.url}"/>
			<jvmarg value="-Djava.naming.factory.initial=com.ibm.websphere.naming.WsnInitialContextFactory"/>
			<jvmarg value="-Dsocle.servicetest.mail=${mail}"/>
			<jvmarg value="-Xbootclasspath/p:${libwas.dir}/ibmorb.jar;${libwas.dir}/ibmext.jar;${libwas.dir}/iwsorbutil.jar;properties"/>
			
			<classpath>
				<fileset dir="${libwas.dir}" includes="*.jar" />
				<fileset dir="${bin.dir}/ear" includes="*.jar" />
				<fileset dir="${libcore.dir}" includes="*.jar" />
			</classpath>
			
			<formatter type="plain"/>
			<batchtest todir="bin/test">
                <fileset dir='bin/ant-classes' includes='**/*Test.class'/>
            </batchtest>
			
		</junit>
	</target>
	
</project>
