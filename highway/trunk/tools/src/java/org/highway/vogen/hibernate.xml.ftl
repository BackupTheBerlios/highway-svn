
<!DOCTYPE hibernate-mapping PUBLIC
    ${helper.hibernateMappingPublicId} 
    ${helper.hibernateMappingSystemId}>

<!-- File generated by vogen. Do not modify manually. -->
<hibernate-mapping>

    <class
    	name=${helper.entityFullClassName}
        <#if helper.hasMapping>
        table="${helper.mappingNomTable}"
        discriminator-value="${helper.discriminatorValue}"
        </#if>
     >
     	
     	<#if helper.hasPrimitiveId>
     	<#list helper.methodsAnnotatedWithMappingId as method>
        <id
            name="${helper.getPropertyName(method)}"
            column="${helper.getColumnName(method)}"
            type="${helper.getPropertyHibernateType(method)}">
        
            <generator class="${helper.getGeneratorClass(method)}">
            	<#list helper.methodsAnnotatedWithGeneratorParam as generatorParamMethod>
                <param name="${helper.getGeneratorParamName(generatorParamMethod)}">${helper.getGeneratorParamValue(generatorParamMethod)}</param>
                </#list>
            </generator>
        </id>
	    </#list>
        <#elseif helper.hasCompositeId>
        <composite-id>
        	<#list helper.methodsAnnotatedWithMappingId as method>
            <key-property
                name="${helper.getPropertyName(method)}"
                column="${helper.getColumnName(method)}"
                type="${helper.getPropertyHibernateType(method)}"
            />
            </#list>
        </composite-id>
        </#if>
        
        <#if helper.hasDiscriminator>
        <discriminator
                column="${helper.discriminatorColumn}"
                type="${helper.discriminatorType}"
                force="${helper.discriminatorForce}"
                insert="${helper.discriminatorInsert}"
        />
       </#if>
       <#list helper.methodsAnnotatedWithMappingProperty as method>
        <property 
            name="${helper.getPropertyName(method)}"
            type="${helper.getPropertyHibernateType(method)}"
            column="${helper.getColumnName(method)}"
            insert="${helper.getInsertValue(method)}"
            value="${helper.getUpdateValue(method)}"
        />
       </#list>
	</class>
	
	<#if helper.isSubClass>
    
    <subclass
        name="${helper.entityFullClassName}"
        extends="${helper.superClassName}"
        <#if helper.hasDiscriminatorValue>
        discriminator-value="${helper.discriminatorValue}"
        </#if>
    >
   
       <#list helper.methodsAnnotatedWithMappingProperty as method>
        <property
            name="${helper.getPropertyName(method)}"
            type="${helper.getPropertyHibernateType(method)}"
            column="${helper.getColumnName(method)}"
            insert="${helper.getInsertValue(method)}"
            value="${helper.getUpdateValue(method)}"
        />
       </#list>
      </subclass>
    </#if>
   
	<#if helper.isJoinedSubClass>
    <joined-subclass
        name="${helper.entityFullClassName}"
        extends="${helper.superClassName}"
        <#if helper.hasMappingTableValue(method)>
        table="${helper.getMappingTableValue(method)}"
        </#if>
    >
    
       <key column="${helper.keyColumn}"/>
   
       <#list helper.methodsAnnotatedWithMappingProperty as method>
        <property
            name="${helper.getPropertyName(method)}"
            column="${helper.getColumnName(method)}"
            type="${helper.getPropertyHibernateType(method)}"
            insert="${helper.getInsertValue(method)}"
            value="${helper.getUpdateValue(method)}"
         />
       </#list>
      
    </joined-subclass>
   
   </#if>
	
</hibernate-mapping>
